.TH "mtrx::GameTime" 3 "Sat Dec 7 2019" "MTRX Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mtrx::GameTime \- Basic implementation of time values mostly used for the calculation of delta time\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <GameTime\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static double \fBFindTimeDiffSeconds\fP (const std::chrono::high_resolution_clock::time_point &t1, const std::chrono::high_resolution_clock::time_point &t2)"
.br
.ti -1c
.RI "static void \fBInit\fP ()"
.br
.ti -1c
.RI "static void \fBUpdate\fP ()"
.br
.ti -1c
.RI "static float \fBGetTimeSeconds\fP ()"
.br
.ti -1c
.RI "static std::chrono::high_resolution_clock::time_point \fBGetTime\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static float \fBdeltaTime\fP"
.br
.in -1c
.SS "Static Private Member Functions"

.in +1c
.ti -1c
.RI "static void \fBCalculateDeltaTime\fP ()"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static const std::chrono::high_resolution_clock::time_point \fBstartTime\fP"
.br
.ti -1c
.RI "static std::chrono::high_resolution_clock::time_point \fBcurrentTime\fP"
.br
.ti -1c
.RI "static std::chrono::high_resolution_clock::time_point \fBprevCurrentTime\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Basic implementation of time values mostly used for the calculation of delta time\&. 


.SH "Member Function Documentation"
.PP 
.SS "static void mtrx::GameTime::CalculateDeltaTime ()\fC [inline]\fP, \fC [static]\fP, \fC [private]\fP"
Calculate delta time 
.SS "static double mtrx::GameTime::FindTimeDiffSeconds (const std::chrono::high_resolution_clock::time_point & t1, const std::chrono::high_resolution_clock::time_point & t2)\fC [inline]\fP, \fC [static]\fP"

.PP
\fBReturns\fP
.RS 4
The time difference between 2 timepoints in seconds its a double for more precision 
.RE
.PP

.SS "static std::chrono::high_resolution_clock::time_point mtrx::GameTime::GetTime ()\fC [inline]\fP, \fC [static]\fP"

.PP
\fBReturns\fP
.RS 4
Wrapper for getting the current time 
.RE
.PP

.SS "static float mtrx::GameTime::GetTimeSeconds ()\fC [inline]\fP, \fC [static]\fP"

.PP
\fBReturns\fP
.RS 4
time elapsed since the start of the application 
.RE
.PP

.SS "static void mtrx::GameTime::Init ()\fC [inline]\fP, \fC [static]\fP"
Initialization code 
.SS "static void mtrx::GameTime::Update ()\fC [inline]\fP, \fC [static]\fP"
Update time values for calculating delta time 

.SH "Author"
.PP 
Generated automatically by Doxygen for MTRX Engine from the source code\&.
