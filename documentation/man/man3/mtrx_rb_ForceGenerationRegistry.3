.TH "mtrx::rb_ForceGenerationRegistry" 3 "Sat Dec 7 2019" "MTRX Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mtrx::rb_ForceGenerationRegistry \- Registry for force generators used to map a rigidbody to all of the force generators that are to be applied to said rigidbody\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <rb_ForceGenerationRegistry\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBrb_ForceGenerationRegistry\fP ()=default"
.br
.RI "Construct a new rb ForceGenerationRegistry object\&. "
.ti -1c
.RI "\fB~rb_ForceGenerationRegistry\fP ()=default"
.br
.RI "Destroy the rb ForceGenerationRegistry object\&. "
.ti -1c
.RI "void \fBAddForceGenerator\fP (const std::shared_ptr< \fBIRigidbodyForceGenerator\fP > &forceGenerator)"
.br
.RI "Add a force generator to the registry\&. "
.ti -1c
.RI "void \fBRemoveForceGenerator\fP (const int index)"
.br
.RI "Remove a force generator from registry by index\&. "
.ti -1c
.RI "void \fBRemoveForceGenerator\fP (const std::shared_ptr< \fBIRigidbodyForceGenerator\fP > &forceGenerator)"
.br
.RI "Remove force generator\&. "
.ti -1c
.RI "void \fBUpdateForceGenerators\fP (\fBRigidbody\fP *rb, float deltaTime)"
.br
.RI "Apply the force generators onto the rigidbody\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::vector< std::shared_ptr< \fBIRigidbodyForceGenerator\fP > > \fBforceGenerators\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Registry for force generators used to map a rigidbody to all of the force generators that are to be applied to said rigidbody\&. 


.SH "Constructor & Destructor Documentation"
.PP 
.SS "mtrx::rb_ForceGenerationRegistry::rb_ForceGenerationRegistry ()\fC [default]\fP"

.PP
Construct a new rb ForceGenerationRegistry object\&. 
.SS "mtrx::rb_ForceGenerationRegistry::~rb_ForceGenerationRegistry ()\fC [default]\fP"

.PP
Destroy the rb ForceGenerationRegistry object\&. 
.SH "Member Function Documentation"
.PP 
.SS "void mtrx::rb_ForceGenerationRegistry::AddForceGenerator (const std::shared_ptr< \fBIRigidbodyForceGenerator\fP > & forceGenerator)\fC [inline]\fP"

.PP
Add a force generator to the registry\&. 
.PP
\fBParameters\fP
.RS 4
\fIforceGenerator\fP The force generator to be added 
.RE
.PP

.SS "void mtrx::rb_ForceGenerationRegistry::RemoveForceGenerator (const int index)\fC [inline]\fP"

.PP
Remove a force generator from registry by index\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP The position of the force generator 
.RE
.PP

.SS "void mtrx::rb_ForceGenerationRegistry::RemoveForceGenerator (const std::shared_ptr< \fBIRigidbodyForceGenerator\fP > & forceGenerator)\fC [inline]\fP"

.PP
Remove force generator\&. 
.PP
\fBParameters\fP
.RS 4
\fIforceGenerator\fP The force generator that we want to remove 
.RE
.PP

.SS "void mtrx::rb_ForceGenerationRegistry::UpdateForceGenerators (\fBRigidbody\fP * rb, float deltaTime)\fC [inline]\fP"

.PP
Apply the force generators onto the rigidbody\&. 
.PP
\fBParameters\fP
.RS 4
\fIrb\fP The rigidbody we want to apply the forces to 
.br
\fIdeltaTime\fP The time elapsed from last frame 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for MTRX Engine from the source code\&.
