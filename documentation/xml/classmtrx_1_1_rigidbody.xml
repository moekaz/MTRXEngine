<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classmtrx_1_1_rigidbody" kind="class" language="C++" prot="public">
    <compoundname>mtrx::Rigidbody</compoundname>
    <basecompoundref refid="classmtrx_1_1_body" prot="public" virt="non-virtual">mtrx::Body</basecompoundref>
    <includes refid="_rigidbody_8h" local="no">Rigidbody.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmtrx_1_1_rigidbody_1a68e6ecc68099682e0699c1f9a9618983" prot="private" static="no" mutable="no">
        <type>glm::vec3</type>
        <definition>glm::vec3 mtrx::Rigidbody::rotation</definition>
        <argsstring></argsstring>
        <name>rotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="175" column="11" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_rigidbody_1aff6814447b805cd56289c5013391cc54" prot="private" static="no" mutable="no">
        <type>glm::mat3</type>
        <definition>glm::mat3 mtrx::Rigidbody::inverseInertiaTensor</definition>
        <argsstring></argsstring>
        <name>inverseInertiaTensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="178" column="11" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_rigidbody_1a880ad32d920e1bc9b97d02e449cf40a8" prot="private" static="no" mutable="no">
        <type>glm::mat3x4</type>
        <definition>glm::mat3x4 mtrx::Rigidbody::objToWorldMat</definition>
        <argsstring></argsstring>
        <name>objToWorldMat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="180" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_rigidbody_1acffffd7e2acf4cf3e034a34ff31db23f" prot="private" static="no" mutable="no">
        <type>glm::vec3</type>
        <definition>glm::vec3 mtrx::Rigidbody::accumTorque</definition>
        <argsstring></argsstring>
        <name>accumTorque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="181" column="11" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_rigidbody_1a998a8563a43b3ec9c77bf32d5241b759" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float mtrx::Rigidbody::angularDamping</definition>
        <argsstring></argsstring>
        <name>angularDamping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="182" column="7" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_rigidbody_1af6828890817ddc621c1af663b1ecd8f7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mtrx::Rigidbody::isKinematic</definition>
        <argsstring></argsstring>
        <name>isKinematic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="183" column="6" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_rigidbody_1a9f8a76a828601bb64b16672524c4aed3" prot="private" static="no" mutable="no">
        <type><ref refid="structmtrx_1_1_object_axes" kindref="compound">ObjectAxes</ref></type>
        <definition>ObjectAxes mtrx::Rigidbody::axes</definition>
        <argsstring></argsstring>
        <name>axes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="186" column="12" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a42a8ea123c8c05769e646b1e320d649a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtrx::Rigidbody::Rigidbody</definition>
        <argsstring>(float mass=MAX_MASS, bool iskinematic=false, const glm::vec3 &amp;position=glm::vec3(), const glm::quat &amp;orientation=glm::angleAxis(0.f, glm::vec3(0, 1, 0)), const glm::vec3 &amp;scale=glm::vec3(1, 1, 1), const glm::mat3 &amp;inertiaTensor=glm::mat3(1.0f))</argsstring>
        <name>Rigidbody</name>
        <param>
          <type>float</type>
          <declname>mass</declname>
          <defval>MAX_MASS</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>iskinematic</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>position</declname>
          <defval>glm::vec3()</defval>
        </param>
        <param>
          <type>const glm::quat &amp;</type>
          <declname>orientation</declname>
          <defval>glm::angleAxis(0.f, glm::vec3(0, 1, 0))</defval>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>scale</declname>
          <defval>glm::vec3(1, 1, 1)</defval>
        </param>
        <param>
          <type>const glm::mat3 &amp;</type>
          <declname>inertiaTensor</declname>
          <defval>glm::mat3(1.0f)</defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classmtrx_1_1_rigidbody" kindref="compound">Rigidbody</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mass</parametername>
</parameternamelist>
<parameterdescription>
<para>The mass of the rigidbody </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iskinematic</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the rigidbody is kinematic. A kinematic object does not affect other rigidbodies in the simulation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the rigidbody </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>The orientation of the rigidbody </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale of the rigidbody </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inertiaTensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The inertia tensor of the rigidbody </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1af14290171239ff48768a813b4be18973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtrx::Rigidbody::~Rigidbody</definition>
        <argsstring>()=default</argsstring>
        <name>~Rigidbody</name>
        <briefdescription>
<para>Destroy the <ref refid="classmtrx_1_1_rigidbody" kindref="compound">Rigidbody</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1af211b5d887926f56819be103acb87601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::SetInverseInertiaTensor</definition>
        <argsstring>(const glm::mat3 &amp;inertiaTensor)</argsstring>
        <name>SetInverseInertiaTensor</name>
        <param>
          <type>const glm::mat3 &amp;</type>
          <declname>inertiaTensor</declname>
        </param>
        <briefdescription>
<para>Set the Inverse Inertia Tensor of the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inertiaTensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The inertia tensor that we will calculate the inverse of </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="42" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a6d405e86674e7b972b6dac8399b67c4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::SetAngularDamping</definition>
        <argsstring>(float angularDamping)</argsstring>
        <name>SetAngularDamping</name>
        <param>
          <type>float</type>
          <declname>angularDamping</declname>
        </param>
        <briefdescription>
<para>Set the Angular Damping of the rigidbody Angular damping allows us to dampen torque forces applied to the body as a function of time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angularDamping</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of angular damping </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="51" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a1e065382d9fb4792b5c0b3c44d2fa2d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::SetOrientation</definition>
        <argsstring>(glm::quat &amp;orientation)</argsstring>
        <name>SetOrientation</name>
        <param>
          <type>glm::quat &amp;</type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
<para>Set the Orientation of the body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>The new orientation of the body </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="58" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a2ea618bfa2582351fe678732ddaaac21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::SetRotation</definition>
        <argsstring>(glm::vec3 &amp;rotation)</argsstring>
        <name>SetRotation</name>
        <param>
          <type>glm::vec3 &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Set the Rotation value of the rigidbody This rotation value is used to generate torque forces. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value of the rotation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="66" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a8924fc836d641645545967a8f9d597a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::SetIsKinematic</definition>
        <argsstring>(bool kinematic)</argsstring>
        <name>SetIsKinematic</name>
        <param>
          <type>bool</type>
          <declname>kinematic</declname>
        </param>
        <briefdescription>
<para>Set the kinematic value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinematic</parametername>
</parameternamelist>
<parameterdescription>
<para>the new value of whether the body is kinematic </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="73" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a97a357735b238b89617c239f02b5f0f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>glm::mat3 &amp;</type>
        <definition>glm::mat3&amp; mtrx::Rigidbody::GetInverseInertiaTensor</definition>
        <argsstring>()</argsstring>
        <name>GetInverseInertiaTensor</name>
        <briefdescription>
<para>Get the Inverse Inertia Tensor of the body. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>glm::mat3&amp; The inver inertia tensor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="82" column="18" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1afbf0cbe150482320dd67725188af59ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float mtrx::Rigidbody::GetAngularDamping</definition>
        <argsstring>() const</argsstring>
        <name>GetAngularDamping</name>
        <briefdescription>
<para>Get the Angular Damping of the body. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float The value of the angular damping </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="89" column="14" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1aa260080a5e415c0ecc059254fbbabb07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>glm::mat3x4</type>
        <definition>glm::mat3x4 mtrx::Rigidbody::GetObjToWorldMat</definition>
        <argsstring>()</argsstring>
        <name>GetObjToWorldMat</name>
        <briefdescription>
<para>Get the Obj To World Mat. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>glm::mat3x4 The object space to world matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="96" column="20" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a6690f4c3a02bbcddb74fb0e056480ac3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>glm::vec3 &amp;</type>
        <definition>glm::vec3&amp; mtrx::Rigidbody::GetRotation</definition>
        <argsstring>()</argsstring>
        <name>GetRotation</name>
        <briefdescription>
<para>Get the Rotation of the body. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>glm::vec3&amp; The rotation of the body </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="103" column="18" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a853ef16a2e765e40255b3e62cb50b6d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::Rigidbody::GetIsKinematic</definition>
        <argsstring>()</argsstring>
        <name>GetIsKinematic</name>
        <briefdescription>
<para>Get whether the body is kinematic. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true The body is kinematic </para>
</simplesect>
<simplesect kind="return"><para>false The body is not kinematic </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="111" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1af093fef269dac835d233d3d43eef02b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>glm::mat3</type>
        <definition>glm::mat3 mtrx::Rigidbody::CalculateIITWorld</definition>
        <argsstring>()</argsstring>
        <name>CalculateIITWorld</name>
        <briefdescription>
<para>Calculating the inverse inertia tensor in world space. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>glm::mat3 Inverse inertia tensor in world space </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="120" column="18" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a23904a24080b161312bfc0734a64de3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::AddTorque</definition>
        <argsstring>(const glm::vec3 &amp;torque)</argsstring>
        <name>AddTorque</name>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>torque</declname>
        </param>
        <briefdescription>
<para>Add a torque force. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>torque</parametername>
</parameternamelist>
<parameterdescription>
<para>The torque force that we want to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="129" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1acf418f9a9cf3daa8401f40d607d4594f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::ClearAccumulators</definition>
        <argsstring>() override</argsstring>
        <name>ClearAccumulators</name>
        <reimplements refid="classmtrx_1_1_body_1a0080c70c519850e2644233aba78b34e8">ClearAccumulators</reimplements>
        <briefdescription>
<para>Clear acculmulators of rigidbody. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="137" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a7002d5a155bc0a1dbdfa5a0aeb5a46bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::Integrate</definition>
        <argsstring>(float deltaTime) override</argsstring>
        <name>Integrate</name>
        <reimplements refid="classmtrx_1_1_body_1a84c78a39b0133cc83279ef3184923487">Integrate</reimplements>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
<para>Integrate the values of the rigidbody. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deltaTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The time elapsed by previous frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="146" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1ae86166e8ce2f6eab660da644d0697995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::CalculateObjToWorldMat</definition>
        <argsstring>()</argsstring>
        <name>CalculateObjToWorldMat</name>
        <briefdescription>
<para>Calculate object space to world space matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="154" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a68188cc7105320d5a7cb39cac9002fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::AddForceAtPoint</definition>
        <argsstring>(const glm::vec3 &amp;force, const glm::vec3 &amp;point)</argsstring>
        <name>AddForceAtPoint</name>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>force</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Add a force at a certain point in space. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The force that we want to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point upon which to apply the force </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="164" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_rigidbody_1a41635ac1ae40c4057cbc438751428cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::Rigidbody::CalculateBodyData</definition>
        <argsstring>()</argsstring>
        <name>CalculateBodyData</name>
        <briefdescription>
<para>Update some of the information of the rigidbody. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="172" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of rigidbodies with rigidbody dynamics newtonian force integration and rotational forces. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>mtrx::Body</label>
        <link refid="classmtrx_1_1_body"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>mtrx::Rigidbody</label>
        <link refid="classmtrx_1_1_rigidbody"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>mtrx::IIntegratable</label>
        <link refid="classmtrx_1_1_i_integratable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>mtrx::Body</label>
        <link refid="classmtrx_1_1_body"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>transform</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>mtrx::Transform</label>
        <link refid="classmtrx_1_1_transform"/>
      </node>
      <node id="1">
        <label>mtrx::Rigidbody</label>
        <link refid="classmtrx_1_1_rigidbody"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>axes</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>mtrx::IIntegratable</label>
        <link refid="classmtrx_1_1_i_integratable"/>
      </node>
      <node id="5">
        <label>mtrx::ObjectAxes</label>
        <link refid="structmtrx_1_1_object_axes"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" line="15" column="1" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/entities/Rigidbody.h" bodystart="14" bodyend="187"/>
    <listofallmembers>
      <member refid="classmtrx_1_1_body_1a84062092bf0153dac01e6f53b1f38ff3" prot="protected" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>acceleration</name></member>
      <member refid="classmtrx_1_1_body_1ac8352a27c8057002cf19f5179863f0b4" prot="protected" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>accumForces</name></member>
      <member refid="classmtrx_1_1_rigidbody_1acffffd7e2acf4cf3e034a34ff31db23f" prot="private" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>accumTorque</name></member>
      <member refid="classmtrx_1_1_body_1a53b1287b73ec47ee2dd12ac707ab1cd5" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>AddForce</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a68188cc7105320d5a7cb39cac9002fba" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>AddForceAtPoint</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a23904a24080b161312bfc0734a64de3b" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>AddTorque</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a998a8563a43b3ec9c77bf32d5241b759" prot="private" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>angularDamping</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a9f8a76a828601bb64b16672524c4aed3" prot="private" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>axes</name></member>
      <member refid="classmtrx_1_1_body_1a7a4c5e198af72feb53858862c931061c" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>Body</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a41635ac1ae40c4057cbc438751428cc9" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>CalculateBodyData</name></member>
      <member refid="classmtrx_1_1_rigidbody_1af093fef269dac835d233d3d43eef02b6" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>CalculateIITWorld</name></member>
      <member refid="classmtrx_1_1_rigidbody_1ae86166e8ce2f6eab660da644d0697995" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>CalculateObjToWorldMat</name></member>
      <member refid="classmtrx_1_1_rigidbody_1acf418f9a9cf3daa8401f40d607d4594f" prot="public" virt="virtual"><scope>mtrx::Rigidbody</scope><name>ClearAccumulators</name></member>
      <member refid="classmtrx_1_1_body_1a698b85966ec6c5d62c4e48341bd54e53" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetAcceleration</name></member>
      <member refid="classmtrx_1_1_body_1ae5a0abd0bf98dff559d7908b14c28f18" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetAccumForces</name></member>
      <member refid="classmtrx_1_1_rigidbody_1afbf0cbe150482320dd67725188af59ab" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetAngularDamping</name></member>
      <member refid="classmtrx_1_1_body_1a40a8628a4f4afab000cd4403bca2d881" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetDamping</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a97a357735b238b89617c239f02b5f0f7" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetInverseInertiaTensor</name></member>
      <member refid="classmtrx_1_1_body_1ae43c88a3dddee1538fdb03d7df2ea386" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetInverseMass</name></member>
      <member refid="classmtrx_1_1_body_1a9663bf0a999b7cb11c5e0811aa55d1e5" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetIsInfiniteMass</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a853ef16a2e765e40255b3e62cb50b6d3" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetIsKinematic</name></member>
      <member refid="classmtrx_1_1_body_1af8522fa93cdcd293a4158f6706d6a1aa" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetMass</name></member>
      <member refid="classmtrx_1_1_rigidbody_1aa260080a5e415c0ecc059254fbbabb07" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetObjToWorldMat</name></member>
      <member refid="classmtrx_1_1_body_1a48cca0e976f3366b89895f8914d5cbf9" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetOrientation</name></member>
      <member refid="classmtrx_1_1_body_1a1c5804b393a71296a4bbd75376ee9f65" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetPosition</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a6690f4c3a02bbcddb74fb0e056480ac3" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetRotation</name></member>
      <member refid="classmtrx_1_1_body_1aa3c81e1dea71472177a2f155742380e5" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetTransform</name></member>
      <member refid="classmtrx_1_1_body_1a7b479086ce0da500829d1450a2c463e9" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>GetVelocity</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a7002d5a155bc0a1dbdfa5a0aeb5a46bf" prot="public" virt="virtual"><scope>mtrx::Rigidbody</scope><name>Integrate</name></member>
      <member refid="classmtrx_1_1_rigidbody_1aff6814447b805cd56289c5013391cc54" prot="private" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>inverseInertiaTensor</name></member>
      <member refid="classmtrx_1_1_body_1ab19356a752ad6f8e254834174f1aec14" prot="protected" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>inverseMass</name></member>
      <member refid="classmtrx_1_1_rigidbody_1af6828890817ddc621c1af663b1ecd8f7" prot="private" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>isKinematic</name></member>
      <member refid="classmtrx_1_1_body_1a73b28247b7bc3c9e00067b32ed6122ec" prot="protected" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>linearDamping</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a880ad32d920e1bc9b97d02e449cf40a8" prot="private" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>objToWorldMat</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a42a8ea123c8c05769e646b1e320d649a" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>Rigidbody</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a68e6ecc68099682e0699c1f9a9618983" prot="private" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>rotation</name></member>
      <member refid="classmtrx_1_1_body_1ae414507343efd9db5b8d25c0cc756833" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetAcceleration</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a6d405e86674e7b972b6dac8399b67c4c" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetAngularDamping</name></member>
      <member refid="classmtrx_1_1_rigidbody_1af211b5d887926f56819be103acb87601" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetInverseInertiaTensor</name></member>
      <member refid="classmtrx_1_1_body_1a0031fc617536db45b761c4a06d6d1c2d" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetInverseMass</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a8924fc836d641645545967a8f9d597a0" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetIsKinematic</name></member>
      <member refid="classmtrx_1_1_body_1a34174bf1b830d4612fe81ad57881c6b8" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetLinearDamping</name></member>
      <member refid="classmtrx_1_1_body_1afbcd2ba726afc0b7f0fe7be714700bce" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetMass</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a1e065382d9fb4792b5c0b3c44d2fa2d9" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetOrientation</name></member>
      <member refid="classmtrx_1_1_body_1a64aca7d223825ced434d82dac4d07894" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetPosition</name></member>
      <member refid="classmtrx_1_1_rigidbody_1a2ea618bfa2582351fe678732ddaaac21" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetRotation</name></member>
      <member refid="classmtrx_1_1_body_1ac0be253dd711b412b890cb93fc463916" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>SetVelocity</name></member>
      <member refid="classmtrx_1_1_body_1a04a7b478f36e5275994c161ba50c674f" prot="protected" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>transform</name></member>
      <member refid="classmtrx_1_1_body_1aab973a149d64c114165b4617dcfe7013" prot="protected" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>velocity</name></member>
      <member refid="classmtrx_1_1_body_1a2785fca109e166b5c5d45db1b38c38dc" prot="public" virt="virtual"><scope>mtrx::Rigidbody</scope><name>~Body</name></member>
      <member refid="classmtrx_1_1_rigidbody_1af14290171239ff48768a813b4be18973" prot="public" virt="non-virtual"><scope>mtrx::Rigidbody</scope><name>~Rigidbody</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
