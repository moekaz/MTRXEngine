<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classmtrx_1_1_collider" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>mtrx::Collider</compoundname>
    <derivedcompoundref refid="classmtrx_1_1_capsule_collider" prot="public" virt="non-virtual">mtrx::CapsuleCollider</derivedcompoundref>
    <derivedcompoundref refid="classmtrx_1_1_convex_shape_collider" prot="public" virt="non-virtual">mtrx::ConvexShapeCollider</derivedcompoundref>
    <derivedcompoundref refid="classmtrx_1_1_sphere_collider" prot="public" virt="non-virtual">mtrx::SphereCollider</derivedcompoundref>
    <includes refid="_collider_8h" local="no">Collider.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmtrx_1_1_collider_1a3c8cc45f3a2b276157ea474620f5dcb7" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int mtrx::Collider::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="149" column="12" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmtrx_1_1_collider_1a8abb09a0eee536698d5a7b5d270ed584" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int mtrx::Collider::colliderId</definition>
        <argsstring></argsstring>
        <name>colliderId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="152" column="5" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_collider_1adf1662048ee02d5d96d430a8a3875433" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacemtrx_1aba70c7f807f8a862fb9a10445ec82e7c" kindref="member">ColliderType</ref></type>
        <definition>ColliderType mtrx::Collider::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="153" column="14" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_collider_1ad0f9075538c6a8c50ab2137f9172a201" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mtrx::Collider::isConvexShape</definition>
        <argsstring></argsstring>
        <name>isConvexShape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="154" column="6" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_collider_1a812b71180496a530dc1a3a1750e4efb1" prot="protected" static="no" mutable="no">
        <type><ref refid="classmtrx_1_1_transform" kindref="compound">Transform</ref></type>
        <definition>Transform mtrx::Collider::transform</definition>
        <argsstring></argsstring>
        <name>transform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="155" column="11" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmtrx_1_1_collider_1a897ee0f8baa05f825be5f96a2abc3bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtrx::Collider::Collider</definition>
        <argsstring>(const ColliderType &amp;colliderType, const glm::vec3 &amp;center=glm::vec3(), const glm::quat &amp;orientation=glm::angleAxis(0.f, worldUp), const glm::vec3 &amp;scale=glm::vec3(1.f, 1.f, 1.f), bool isConvex=false)</argsstring>
        <name>Collider</name>
        <param>
          <type>const <ref refid="namespacemtrx_1aba70c7f807f8a862fb9a10445ec82e7c" kindref="member">ColliderType</ref> &amp;</type>
          <declname>colliderType</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>center</declname>
          <defval>glm::vec3()</defval>
        </param>
        <param>
          <type>const glm::quat &amp;</type>
          <declname>orientation</declname>
          <defval>glm::angleAxis(0.f, worldUp)</defval>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>scale</declname>
          <defval>glm::vec3(1.f, 1.f, 1.f)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isConvex</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colliderType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center of the collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>Orientation of the collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale of the collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isConvex</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether collider is a convex shape collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1a1af6daddbfaa7ba34f33845de3b05457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtrx::Collider::Collider</definition>
        <argsstring>(const ColliderType &amp;colliderType, const Transform &amp;transform, bool isConvex=false)</argsstring>
        <name>Collider</name>
        <param>
          <type>const <ref refid="namespacemtrx_1aba70c7f807f8a862fb9a10445ec82e7c" kindref="member">ColliderType</ref> &amp;</type>
          <declname>colliderType</declname>
        </param>
        <param>
          <type>const <ref refid="classmtrx_1_1_transform" kindref="compound">Transform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isConvex</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colliderType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of the collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classmtrx_1_1_transform" kindref="compound">mtrx::Transform</ref> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isConvex</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the collider is a convex shape collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1a3d27ae263e0cc1f15b14ec09a715ab7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual mtrx::Collider::~Collider</definition>
        <argsstring>()=default</argsstring>
        <name>~Collider</name>
        <briefdescription>
<para>Destroy the <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1a361c341b949adf2508c46389f8b4509d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool mtrx::Collider::RaycastCollision</definition>
        <argsstring>(const Ray &amp;ray)=0</argsstring>
        <name>RaycastCollision</name>
        <reimplementedby refid="classmtrx_1_1_a_a_b_b_collider_1ac618c2f04d88d448668dcc7efbf513e3">RaycastCollision</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_o_o_b_b_collider_1afa990f428f3044ceb1639816f5d98278">RaycastCollision</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_capsule_collider_1a17f41f46bd503f7c7906c6246cbfcb26">RaycastCollision</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_sphere_collider_1adf3567008a057fe1332d922b7f82c29e">RaycastCollision</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_convex_shape_collider_1a44fba7247c98212c60e0eec4e16e74ec">RaycastCollision</reimplementedby>
        <param>
          <type>const <ref refid="classmtrx_1_1_ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <briefdescription>
<para>Raycasting function that all colliders should have. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ray</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmtrx_1_1_ray" kindref="compound">Ray</ref> that we want to cast </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classmtrx_1_1_ray" kindref="compound">mtrx::Ray</ref> </para>
</simplesect>
<simplesect kind="return"><para>true The ray and the collider collide </para>
</simplesect>
<simplesect kind="return"><para>false The ray and the collider do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="50" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1af8b907eaf8cb13316dce419f595371df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::Collider::CheckCollision</definition>
        <argsstring>(const Collider &amp;collider)</argsstring>
        <name>CheckCollision</name>
        <param>
          <type>const <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> &amp;</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
<para>Check for collision with another collider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>collider</parametername>
</parameternamelist>
<parameterdescription>
<para>The collider that we want to check for collision </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The collider is colliding with this collider </para>
</simplesect>
<simplesect kind="return"><para>false The collider is not colliding with this collider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="59" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1a6dca0e6b7f19c5582a312af54c34d8e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::vec3 &amp;</type>
        <definition>const glm::vec3&amp; mtrx::Collider::GetPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetPosition</name>
        <briefdescription>
<para>Get the Position of the collider. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const glm::vec3&amp; current position of the collider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="67" column="24" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1a0e7750440d8bf791c85b87d2e6a6f33a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::vec3 &amp;</type>
        <definition>const glm::vec3&amp; mtrx::Collider::GetScale</definition>
        <argsstring>() const</argsstring>
        <name>GetScale</name>
        <briefdescription>
<para>Get the Scale of the collider. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const glm::vec3&amp; The current scale of the collider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="74" column="24" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1ad22caa3bdd6a81cc511a0f9141d8e5ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::quat &amp;</type>
        <definition>const glm::quat&amp; mtrx::Collider::GetOrientation</definition>
        <argsstring>() const</argsstring>
        <name>GetOrientation</name>
        <briefdescription>
<para>Get the Orientation of the collider. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const glm::quat&amp; The current orientation of the collider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="81" column="24" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1aa0eb9dee1d98fd45df1ef8cbfa0e43be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacemtrx_1aba70c7f807f8a862fb9a10445ec82e7c" kindref="member">ColliderType</ref> &amp;</type>
        <definition>const ColliderType&amp; mtrx::Collider::GetColliderType</definition>
        <argsstring>() const</argsstring>
        <name>GetColliderType</name>
        <briefdescription>
<para>Get the <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> Type of collider. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const ColliderType&amp; Enum collider type value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="88" column="27" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1ac43e5d476507344a3340bae5451ad616" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int</type>
        <definition>const int mtrx::Collider::GetColliderId</definition>
        <argsstring>() const</argsstring>
        <name>GetColliderId</name>
        <briefdescription>
<para>Get the <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> Id of the collider. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const int Value of the Id of the collider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="95" column="18" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1a056bd024840f5c426fdb9157fd81cf37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool mtrx::Collider::IsConvex</definition>
        <argsstring>() const</argsstring>
        <name>IsConvex</name>
        <briefdescription>
<para>Is this collider convex. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true The collider is a convex shape </para>
</simplesect>
<simplesect kind="return"><para>false The collider is not a convex shape </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="103" column="19" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1afccd3a798fc870d4acbb3c7a3f783c05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::vec3</type>
        <definition>const glm::vec3 mtrx::Collider::GetForward</definition>
        <argsstring>() const</argsstring>
        <name>GetForward</name>
        <briefdescription>
<para>Get the Forward axis vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const glm::vec3 The forward vector of this collider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="110" column="24" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1a59a39aa74953a4a6d228fec5bf3028e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::vec3</type>
        <definition>const glm::vec3 mtrx::Collider::GetSide</definition>
        <argsstring>() const</argsstring>
        <name>GetSide</name>
        <briefdescription>
<para>Get the Side axis vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const glm::vec3 The side axis vector of the collider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="117" column="24" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1ac946675c7e0ae86dc77459742511b9ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::vec3</type>
        <definition>const glm::vec3 mtrx::Collider::GetUp</definition>
        <argsstring>() const</argsstring>
        <name>GetUp</name>
        <briefdescription>
<para>Get the Up axis vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const glm::vec3 the up axis vector of the collider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="124" column="24" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1a0bbed70b7af99a1469b3da9eac7df531" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mtrx::Collider::SetPosition</definition>
        <argsstring>(const glm::vec3 &amp;center)</argsstring>
        <name>SetPosition</name>
        <reimplementedby refid="classmtrx_1_1_convex_shape_collider_1ab6be6d11c7ef35fa0efa1743ffd82db7">SetPosition</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_capsule_collider_1ad8b6a634528473222da22557d2d25764">SetPosition</reimplementedby>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>center</declname>
        </param>
        <briefdescription>
<para>Set the Position of the collider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>The center position of this collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="132" column="21" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1a81b9373f9d09221753255046b9279a5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mtrx::Collider::SetScale</definition>
        <argsstring>(const glm::vec3 &amp;scale)</argsstring>
        <name>SetScale</name>
        <reimplementedby refid="classmtrx_1_1_o_o_b_b_collider_1a7fe953f72faabf2998e9856d68b119f6">SetScale</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_a_a_b_b_collider_1ac0cc88fabe8819ec1578d8999e248eaf">SetScale</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_convex_shape_collider_1a1de37ecfb1bd42e43201c09c6e5a980f">SetScale</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_capsule_collider_1ae1c97f035b4a0d26c7f680780ecc6996">SetScale</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_sphere_collider_1ad238eaded51ef815efaf350a632d4ed0">SetScale</reimplementedby>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Set the Scale of the collider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The new scale of the collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="139" column="21" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_collider_1ac69efe7d26d9e600154f601cbcc30849" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mtrx::Collider::SetOrientation</definition>
        <argsstring>(const glm::quat &amp;orientation)</argsstring>
        <name>SetOrientation</name>
        <reimplementedby refid="classmtrx_1_1_a_a_b_b_collider_1a50a3eed64eb69d3568386978181026da">SetOrientation</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_capsule_collider_1a03a6476613b7f81a5250eee613c7ed2f">SetOrientation</reimplementedby>
        <reimplementedby refid="classmtrx_1_1_convex_shape_collider_1af86aa5dae629acb4076d15dcad004c7c">SetOrientation</reimplementedby>
        <param>
          <type>const glm::quat &amp;</type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
<para>Set the Orientation of the collider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para>The new orientation of the collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="146" column="21" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="146" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic API for all colliders. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>mtrx::CapsuleCollider</label>
        <link refid="classmtrx_1_1_capsule_collider"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>mtrx::AABBCollider</label>
        <link refid="classmtrx_1_1_a_a_b_b_collider"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>mtrx::SphereCollider</label>
        <link refid="classmtrx_1_1_sphere_collider"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>mtrx::Collider</label>
        <link refid="classmtrx_1_1_collider"/>
      </node>
      <node id="3">
        <label>mtrx::ConvexShapeCollider</label>
        <link refid="classmtrx_1_1_convex_shape_collider"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>mtrx::OOBBCollider</label>
        <link refid="classmtrx_1_1_o_o_b_b_collider"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>mtrx::Transform</label>
        <link refid="classmtrx_1_1_transform"/>
      </node>
      <node id="1">
        <label>mtrx::Collider</label>
        <link refid="classmtrx_1_1_collider"/>
        <childnode refid="2" relation="usage">
          <edgelabel>transform</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" line="15" column="1" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/Collider.h" bodystart="14" bodyend="156"/>
    <listofallmembers>
      <member refid="classmtrx_1_1_collider_1af8b907eaf8cb13316dce419f595371df" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>CheckCollision</name></member>
      <member refid="classmtrx_1_1_collider_1a897ee0f8baa05f825be5f96a2abc3bd1" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>Collider</name></member>
      <member refid="classmtrx_1_1_collider_1a1af6daddbfaa7ba34f33845de3b05457" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>Collider</name></member>
      <member refid="classmtrx_1_1_collider_1a8abb09a0eee536698d5a7b5d270ed584" prot="protected" virt="non-virtual"><scope>mtrx::Collider</scope><name>colliderId</name></member>
      <member refid="classmtrx_1_1_collider_1ac43e5d476507344a3340bae5451ad616" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>GetColliderId</name></member>
      <member refid="classmtrx_1_1_collider_1aa0eb9dee1d98fd45df1ef8cbfa0e43be" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>GetColliderType</name></member>
      <member refid="classmtrx_1_1_collider_1afccd3a798fc870d4acbb3c7a3f783c05" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>GetForward</name></member>
      <member refid="classmtrx_1_1_collider_1ad22caa3bdd6a81cc511a0f9141d8e5ee" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>GetOrientation</name></member>
      <member refid="classmtrx_1_1_collider_1a6dca0e6b7f19c5582a312af54c34d8e1" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>GetPosition</name></member>
      <member refid="classmtrx_1_1_collider_1a0e7750440d8bf791c85b87d2e6a6f33a" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>GetScale</name></member>
      <member refid="classmtrx_1_1_collider_1a59a39aa74953a4a6d228fec5bf3028e8" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>GetSide</name></member>
      <member refid="classmtrx_1_1_collider_1ac946675c7e0ae86dc77459742511b9ae" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>GetUp</name></member>
      <member refid="classmtrx_1_1_collider_1a3c8cc45f3a2b276157ea474620f5dcb7" prot="private" virt="non-virtual"><scope>mtrx::Collider</scope><name>id</name></member>
      <member refid="classmtrx_1_1_collider_1a056bd024840f5c426fdb9157fd81cf37" prot="public" virt="non-virtual"><scope>mtrx::Collider</scope><name>IsConvex</name></member>
      <member refid="classmtrx_1_1_collider_1ad0f9075538c6a8c50ab2137f9172a201" prot="protected" virt="non-virtual"><scope>mtrx::Collider</scope><name>isConvexShape</name></member>
      <member refid="classmtrx_1_1_collider_1a361c341b949adf2508c46389f8b4509d" prot="public" virt="pure-virtual"><scope>mtrx::Collider</scope><name>RaycastCollision</name></member>
      <member refid="classmtrx_1_1_collider_1ac69efe7d26d9e600154f601cbcc30849" prot="public" virt="virtual"><scope>mtrx::Collider</scope><name>SetOrientation</name></member>
      <member refid="classmtrx_1_1_collider_1a0bbed70b7af99a1469b3da9eac7df531" prot="public" virt="virtual"><scope>mtrx::Collider</scope><name>SetPosition</name></member>
      <member refid="classmtrx_1_1_collider_1a81b9373f9d09221753255046b9279a5d" prot="public" virt="virtual"><scope>mtrx::Collider</scope><name>SetScale</name></member>
      <member refid="classmtrx_1_1_collider_1a812b71180496a530dc1a3a1750e4efb1" prot="protected" virt="non-virtual"><scope>mtrx::Collider</scope><name>transform</name></member>
      <member refid="classmtrx_1_1_collider_1adf1662048ee02d5d96d430a8a3875433" prot="protected" virt="non-virtual"><scope>mtrx::Collider</scope><name>type</name></member>
      <member refid="classmtrx_1_1_collider_1a3d27ae263e0cc1f15b14ec09a715ab7d" prot="public" virt="virtual"><scope>mtrx::Collider</scope><name>~Collider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
