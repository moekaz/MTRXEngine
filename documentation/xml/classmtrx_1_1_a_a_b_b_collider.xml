<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classmtrx_1_1_a_a_b_b_collider" kind="class" language="C++" prot="public">
    <compoundname>mtrx::AABBCollider</compoundname>
    <basecompoundref refid="classmtrx_1_1_convex_shape_collider" prot="public" virt="non-virtual">mtrx::ConvexShapeCollider</basecompoundref>
    <basecompoundref refid="classmtrx_1_1_i_bounding_volume" prot="private" virt="non-virtual">mtrx::IBoundingVolume</basecompoundref>
    <includes refid="_a_a_b_b_collider_8h" local="no">AABBCollider.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmtrx_1_1_a_a_b_b_collider_1a4c16d0fe60e8d12c5b47439d2d69ac19" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float mtrx::AABBCollider::halfExtents[3]</definition>
        <argsstring>[3]</argsstring>
        <name>halfExtents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="103" column="7" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_a_a_b_b_collider_1a76310ed329d8f1968938a6f158a2ee6a" prot="private" static="no" mutable="no">
        <type><ref refid="structmtrx_1_1_object_axes" kindref="compound">ObjectAxes</ref></type>
        <definition>ObjectAxes mtrx::AABBCollider::axes</definition>
        <argsstring></argsstring>
        <name>axes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="104" column="12" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmtrx_1_1_a_a_b_b_collider_1a81573e91c21af002a33f7ae896c1fb58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtrx::AABBCollider::AABBCollider</definition>
        <argsstring>(const glm::vec3 &amp;center=glm::vec3(), const glm::vec3 &amp;scale=glm::vec3(1, 1, 1))</argsstring>
        <name>AABBCollider</name>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>center</declname>
          <defval>glm::vec3()</defval>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>scale</declname>
          <defval>glm::vec3(1, 1, 1)</defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classmtrx_1_1_a_a_b_b_collider" kindref="compound">AABBCollider</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center point of the AABB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale vector of the AABB </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classmtrx_1_1_transform" kindref="compound">mtrx::Transform</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_a_a_b_b_collider_1ab2a1acb8bbc4419fc2df64bdfca516e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual mtrx::AABBCollider::~AABBCollider</definition>
        <argsstring>()=default</argsstring>
        <name>~AABBCollider</name>
        <briefdescription>
<para>Destroy the <ref refid="classmtrx_1_1_a_a_b_b_collider" kindref="compound">AABBCollider</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="29" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_a_a_b_b_collider_1ac618c2f04d88d448668dcc7efbf513e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool mtrx::AABBCollider::RaycastCollision</definition>
        <argsstring>(const Ray &amp;ray) override</argsstring>
        <name>RaycastCollision</name>
        <reimplements refid="classmtrx_1_1_convex_shape_collider_1a44fba7247c98212c60e0eec4e16e74ec">RaycastCollision</reimplements>
        <param>
          <type>const <ref refid="classmtrx_1_1_ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <briefdescription>
<para>Collision function between a ray and an AABB. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ray</parametername>
</parameternamelist>
<parameterdescription>
<para>The ray that we will be checking collision on </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>mtrx::ray</para>
</simplesect>
<simplesect kind="return"><para>true If there is a collision </para>
</simplesect>
<simplesect kind="return"><para>false If there is no collision </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="39" column="21" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_a_a_b_b_collider_1a50a3eed64eb69d3568386978181026da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mtrx::AABBCollider::SetOrientation</definition>
        <argsstring>(const glm::quat &amp;orientation) override</argsstring>
        <name>SetOrientation</name>
        <reimplements refid="classmtrx_1_1_convex_shape_collider_1af86aa5dae629acb4076d15dcad004c7c">SetOrientation</reimplements>
        <param>
          <type>const glm::quat &amp;</type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
<para>This function should not be used and is empty as AABBs should not change orientations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orientation</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="50" column="21" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_a_a_b_b_collider_1a7a228dca65e647d58c1e9d3b3dce4f4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>float</type>
        <definition>virtual float mtrx::AABBCollider::GetSize</definition>
        <argsstring>() override</argsstring>
        <name>GetSize</name>
        <reimplements refid="classmtrx_1_1_i_bounding_volume_1a5b206a8c077a67afa20e5ca9249228d6">GetSize</reimplements>
        <briefdescription>
<para>Calculate the size of an AABB defined as length * width * height. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="57" column="22" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_a_a_b_b_collider_1a9120ec0049b6c970fd89483e38893348" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::vec3 *</type>
        <definition>const glm::vec3* mtrx::AABBCollider::GetAxes</definition>
        <argsstring>() const</argsstring>
        <name>GetAxes</name>
        <briefdescription>
<para>Get the Axes that define the AABB&apos;s world They would constant in this case since the orientation never changes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const glm::vec3* pointer to the array of 3 axes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="71" column="24" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_a_a_b_b_collider_1aa55065fc50bb1929982a434b18db157c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const float *</type>
        <definition>const float* mtrx::AABBCollider::GetHalfExtents</definition>
        <argsstring>() const</argsstring>
        <name>GetHalfExtents</name>
        <briefdescription>
<para>Get the Half Extents of the AABB (This is the const version) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const float* pointer to the array of half extents values in each dimension </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="78" column="20" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_a_a_b_b_collider_1a80f7842f57506dd4010e854b5f53870e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float *</type>
        <definition>float* mtrx::AABBCollider::GetHalfExtents</definition>
        <argsstring>()</argsstring>
        <name>GetHalfExtents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Non const version of <ref refid="classmtrx_1_1_a_a_b_b_collider_1a80f7842f57506dd4010e854b5f53870e" kindref="member">GetHalfExtents()</ref></para>
<para><simplesect kind="return"><para>float* pointer to the array of halfExtents </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="85" column="14" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_a_a_b_b_collider_1ac0cc88fabe8819ec1578d8999e248eaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mtrx::AABBCollider::SetScale</definition>
        <argsstring>(const glm::vec3 &amp;scale) override</argsstring>
        <name>SetScale</name>
        <reimplements refid="classmtrx_1_1_convex_shape_collider_1a1de37ecfb1bd42e43201c09c6e5a980f">SetScale</reimplements>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Set the Scale object overriden to modify the halfExtents to represent scale change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The new scale vector of the AABB </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="93" column="21" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="93" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implmentation of an Axis Aligned Bounding Box used for collision systems. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>mtrx::IBoundingVolume</label>
        <link refid="classmtrx_1_1_i_bounding_volume"/>
      </node>
      <node id="1">
        <label>mtrx::AABBCollider</label>
        <link refid="classmtrx_1_1_a_a_b_b_collider"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>mtrx::Collider</label>
        <link refid="classmtrx_1_1_collider"/>
      </node>
      <node id="2">
        <label>mtrx::ConvexShapeCollider</label>
        <link refid="classmtrx_1_1_convex_shape_collider"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>mtrx::Transform</label>
        <link refid="classmtrx_1_1_transform"/>
      </node>
      <node id="5">
        <label>mtrx::IBoundingVolume</label>
        <link refid="classmtrx_1_1_i_bounding_volume"/>
      </node>
      <node id="1">
        <label>mtrx::AABBCollider</label>
        <link refid="classmtrx_1_1_a_a_b_b_collider"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="private-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>axes</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>mtrx::ObjectAxes</label>
        <link refid="structmtrx_1_1_object_axes"/>
      </node>
      <node id="3">
        <label>mtrx::Collider</label>
        <link refid="classmtrx_1_1_collider"/>
        <childnode refid="4" relation="usage">
          <edgelabel>transform</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>mtrx::ConvexShapeCollider</label>
        <link refid="classmtrx_1_1_convex_shape_collider"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" line="13" column="1" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/AABBCollider.h" bodystart="12" bodyend="105"/>
    <listofallmembers>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1a81573e91c21af002a33f7ae896c1fb58" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>AABBCollider</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1a76310ed329d8f1968938a6f158a2ee6a" prot="private" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>axes</name></member>
      <member refid="classmtrx_1_1_collider_1af8b907eaf8cb13316dce419f595371df" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>CheckCollision</name></member>
      <member refid="classmtrx_1_1_collider_1a897ee0f8baa05f825be5f96a2abc3bd1" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>Collider</name></member>
      <member refid="classmtrx_1_1_collider_1a1af6daddbfaa7ba34f33845de3b05457" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>Collider</name></member>
      <member refid="classmtrx_1_1_collider_1a8abb09a0eee536698d5a7b5d270ed584" prot="protected" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>colliderId</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1a0f07c2d77aa82d29e5a3dd8d925f1d72" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>ConvexShapeCollider</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1af75db8ad0803ab9654f9cd7809a9531d" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>ConvexShapeCollider</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1aedd243fcc1e07eacab102dace67a3ce3" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>ConvexShapeCollider</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1ad74b9852fb1dbc2eb916d1fc6193a349" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>ConvexShapeCollider</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1a9120ec0049b6c970fd89483e38893348" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetAxes</name></member>
      <member refid="classmtrx_1_1_collider_1ac43e5d476507344a3340bae5451ad616" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetColliderId</name></member>
      <member refid="classmtrx_1_1_collider_1aa0eb9dee1d98fd45df1ef8cbfa0e43be" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetColliderType</name></member>
      <member refid="classmtrx_1_1_collider_1afccd3a798fc870d4acbb3c7a3f783c05" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetForward</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1aa55065fc50bb1929982a434b18db157c" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetHalfExtents</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1a80f7842f57506dd4010e854b5f53870e" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetHalfExtents</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1a1034fa2d6f51a20b12b060a6264d9cc2" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetModelMatrix</name></member>
      <member refid="classmtrx_1_1_collider_1ad22caa3bdd6a81cc511a0f9141d8e5ee" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetOrientation</name></member>
      <member refid="classmtrx_1_1_collider_1a6dca0e6b7f19c5582a312af54c34d8e1" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetPosition</name></member>
      <member refid="classmtrx_1_1_collider_1a0e7750440d8bf791c85b87d2e6a6f33a" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetScale</name></member>
      <member refid="classmtrx_1_1_collider_1a59a39aa74953a4a6d228fec5bf3028e8" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetSide</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1a7a228dca65e647d58c1e9d3b3dce4f4e" prot="public" virt="virtual"><scope>mtrx::AABBCollider</scope><name>GetSize</name></member>
      <member refid="classmtrx_1_1_collider_1ac946675c7e0ae86dc77459742511b9ae" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetUp</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1a73739e13e64f22f948e306e1794ea418" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>GetVertices</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1a4c16d0fe60e8d12c5b47439d2d69ac19" prot="private" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>halfExtents</name></member>
      <member refid="classmtrx_1_1_collider_1a3c8cc45f3a2b276157ea474620f5dcb7" prot="private" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>id</name></member>
      <member refid="classmtrx_1_1_collider_1a056bd024840f5c426fdb9157fd81cf37" prot="public" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>IsConvex</name></member>
      <member refid="classmtrx_1_1_collider_1ad0f9075538c6a8c50ab2137f9172a201" prot="protected" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>isConvexShape</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1ac618c2f04d88d448668dcc7efbf513e3" prot="public" virt="virtual"><scope>mtrx::AABBCollider</scope><name>RaycastCollision</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1a50a3eed64eb69d3568386978181026da" prot="public" virt="virtual"><scope>mtrx::AABBCollider</scope><name>SetOrientation</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1ab6be6d11c7ef35fa0efa1743ffd82db7" prot="public" virt="virtual"><scope>mtrx::AABBCollider</scope><name>SetPosition</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1ac0cc88fabe8819ec1578d8999e248eaf" prot="public" virt="virtual"><scope>mtrx::AABBCollider</scope><name>SetScale</name></member>
      <member refid="classmtrx_1_1_collider_1a812b71180496a530dc1a3a1750e4efb1" prot="protected" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>transform</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1ab221d490ddcf43f3726fd68cb57e254c" prot="protected" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>transformedVertices</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1a936c2679fccd46d85a33d2abfdca4d31" prot="protected" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>transformModified</name></member>
      <member refid="classmtrx_1_1_collider_1adf1662048ee02d5d96d430a8a3875433" prot="protected" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>type</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1ade75a49d458581c1a5f52fae1c511a6e" prot="protected" virt="non-virtual"><scope>mtrx::AABBCollider</scope><name>vertices</name></member>
      <member refid="classmtrx_1_1_a_a_b_b_collider_1ab2a1acb8bbc4419fc2df64bdfca516e8" prot="public" virt="virtual"><scope>mtrx::AABBCollider</scope><name>~AABBCollider</name></member>
      <member refid="classmtrx_1_1_collider_1a3d27ae263e0cc1f15b14ec09a715ab7d" prot="public" virt="virtual"><scope>mtrx::AABBCollider</scope><name>~Collider</name></member>
      <member refid="classmtrx_1_1_convex_shape_collider_1a3e5b9ef9fc9e22f83abcc20186f2afd2" prot="public" virt="virtual"><scope>mtrx::AABBCollider</scope><name>~ConvexShapeCollider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
