<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespacemtrx_1_1_raycast_collision_util" kind="namespace" language="C++">
    <compoundname>mtrx::RaycastCollisionUtil</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemtrx_1_1_raycast_collision_util_1a9ade4a9f4a42e0942669f7e1e1532bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::RaycastCollisionUtil::RaySphereCollision</definition>
        <argsstring>(const glm::vec3 &amp;sphereCenter, float sphereRadius, const glm::vec3 &amp;startPointRay, const glm::vec3 &amp;rayDirection)</argsstring>
        <name>RaySphereCollision</name>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>sphereCenter</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sphereRadius</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>startPointRay</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>rayDirection</declname>
        </param>
        <briefdescription>
<para>Raycasting onto a sphere collider. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classmtrx_1_1_sphere_collider" kindref="compound">mtrx::SphereCollider</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classmtrx_1_1_ray" kindref="compound">mtrx::Ray</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sphereCenter</parametername>
</parameternamelist>
<parameterdescription>
<para>Center of the sphere collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sphereRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>Radius of the sphere collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startPointRay</parametername>
</parameternamelist>
<parameterdescription>
<para>Start point of the ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rayDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>Normalized direction of the ray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The ray and the sphere collider collide </para>
</simplesect>
<simplesect kind="return"><para>false The ray and the sphere collider do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" line="25" column="6" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtrx_1_1_raycast_collision_util_1ab4d2464cead181062893def44dba015e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::RaycastCollisionUtil::RayCapsuleCollision</definition>
        <argsstring>(const glm::vec3 &amp;startPositionRay, const glm::vec3 &amp;direction, const glm::vec3 &amp;A, const glm::vec3 &amp;B, float capsRadius)</argsstring>
        <name>RayCapsuleCollision</name>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>startPositionRay</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>float</type>
          <declname>capsRadius</declname>
        </param>
        <briefdescription>
<para>Raycasting onto a capsule collider. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classmtrx_1_1_capsule_collider" kindref="compound">mtrx::CapsuleCollider</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classmtrx_1_1_ray" kindref="compound">mtrx::Ray</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>startPositionRay</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position of the ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>The normalized direction of the ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>The center of the topmost sphere of the capsule </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>The center of the bottommost sphere of the capsule </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capsRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the capsule </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The ray and the capsule collider collide </para>
</simplesect>
<simplesect kind="return"><para>false The ray and the capsule collider do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" line="38" column="6" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" declline="38" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtrx_1_1_raycast_collision_util_1a51b04fb66e7ff65a36760ae7719f53a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::RaycastCollisionUtil::RayBoxCollision</definition>
        <argsstring>(const glm::vec3 &amp;rayStart, const glm::vec3 &amp;rayDirection, const glm::vec3 &amp;center, const glm::vec3 *axes, const float *halfExtents)</argsstring>
        <name>RayBoxCollision</name>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>rayStart</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>rayDirection</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const glm::vec3 *</type>
          <declname>axes</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>halfExtents</declname>
        </param>
        <briefdescription>
<para>Raycasting onto a box collider. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classmtrx_1_1_o_o_b_b_collider" kindref="compound">mtrx::OOBBCollider</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classmtrx_1_1_a_a_b_b_collider" kindref="compound">mtrx::AABBCollider</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classmtrx_1_1_ray" kindref="compound">mtrx::Ray</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rayStart</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting point of the ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rayDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>The normalized direction of the ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>The center of the box collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axes</parametername>
</parameternamelist>
<parameterdescription>
<para>The axes of the collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>halfExtents</parametername>
</parameternamelist>
<parameterdescription>
<para>the half extents of the collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The ray and box collide </para>
</simplesect>
<simplesect kind="return"><para>false The ray and box do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" line="51" column="6" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtrx_1_1_raycast_collision_util_1aaf0e7f72e77797fed30e2468c8e34eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> *</type>
        <definition>Collider* mtrx::RaycastCollisionUtil::RaycastFiltered</definition>
        <argsstring>(const std::map&lt; int, Collider * &gt; &amp;colliders, const std::vector&lt; Collider * &gt; &amp;filterColliders, const glm::vec3 &amp;rayStartPosition, const glm::vec3 &amp;rayDirection)</argsstring>
        <name>RaycastFiltered</name>
        <param>
          <type>const std::map&lt; int, <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> * &gt; &amp;</type>
          <declname>colliders</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> * &gt; &amp;</type>
          <declname>filterColliders</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>rayStartPosition</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>rayDirection</declname>
        </param>
        <briefdescription>
<para>NOT TESTED OR USED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colliders</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filterColliders</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rayStartPosition</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rayDirection</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Collider* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" line="62" column="10" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" declline="62" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtrx_1_1_raycast_collision_util_1a58671bfdaddc9adb4510553f29a1c4e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> *</type>
        <definition>Collider* mtrx::RaycastCollisionUtil::RaycastUnfiltered</definition>
        <argsstring>(const std::map&lt; int, Collider * &gt; &amp;colliders, const glm::vec3 &amp;rayStartPosition, const glm::vec3 &amp;rayDirection)</argsstring>
        <name>RaycastUnfiltered</name>
        <param>
          <type>const std::map&lt; int, <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> * &gt; &amp;</type>
          <declname>colliders</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>rayStartPosition</declname>
        </param>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>rayDirection</declname>
        </param>
        <briefdescription>
<para>NOT TESTED OR USED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colliders</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rayStartPosition</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rayDirection</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Collider* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" line="72" column="10" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" declline="72" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility namespace used for raycasting functionality. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/RaycastCollisionUtil.h" line="14" column="1"/>
  </compounddef>
</doxygen>
