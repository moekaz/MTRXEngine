<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="md__c_1__users_mohamed__desktop__m_t_r_x_engine__r_e_a_d_m_e" kind="page">
    <compoundname>md_C:_Users_mohamed_Desktop_MTRXEngine_README</compoundname>
    <title>MTRXEngine</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<sect1 id="md__c_1__users_mohamed__desktop__m_t_r_x_engine__r_e_a_d_m_e_1autotoc_md1">
<title>Author:</title>
<para>Mohamed Kazma</para>
</sect1>
<sect1 id="md__c_1__users_mohamed__desktop__m_t_r_x_engine__r_e_a_d_m_e_1autotoc_md2">
<title>Description:</title>
<para>A basic C++ based physics engine which uses some libraries like GLM, SPDLOG, GLAD, GLFW.</para>
<para><itemizedlist>
<listitem><para>Implements rigidbody dynamics with force and torque integration.</para>
</listitem><listitem><para>Implements force generators that can be used to simulate certain forces like gravity, drag, buoyancy, stiff springs, etc...</para>
</listitem><listitem><para>Implements a basic collision detection system with basic bounding volumes (sphere, capsule, box).</para>
</listitem><listitem><para>Implements convex shape colliders with GJK Collision detection</para>
</listitem><listitem><para>Basic raycasting that can be used to grab a certain collider using a certain ray with the option to filter out certain colliders</para>
</listitem><listitem><para>Very rough implementation of Bounding Volume Hierarchies(untested) that can be used to optimize collision detection checks</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="md__c_1__users_mohamed__desktop__m_t_r_x_engine__r_e_a_d_m_e_1autotoc_md3">
<title>Book Sources</title>
<para>These are some of the books that i have used as inspiration: <verbatim>Real-Time Collision Detection - Christer Ericson
Game Physics Engine Development - Ian Millington
Game Engine Architecture - Jason Gregory
</verbatim></para>
</sect1>
<sect1 id="md__c_1__users_mohamed__desktop__m_t_r_x_engine__r_e_a_d_m_e_1autotoc_md4">
<title>Fixing timesteps:</title>
<para><ulink url="https://web.archive.org/web/20180321070852/https://.gafferongames.com/post/fix_your_timestep">https://web.archive.org/web/20180321070852/https://.gafferongames.com/post/fix_your_timestep</ulink></para>
</sect1>
<sect1 id="md__c_1__users_mohamed__desktop__m_t_r_x_engine__r_e_a_d_m_e_1autotoc_md5">
<title>GJK implementation sources:</title>
<para><ulink url="https://caseymuratori.com/blog_0003">https://caseymuratori.com/blog_0003</ulink> <ulink url="http://www.dyn4j.org/2010/04/gjk-gilbert-johnson-keerthi/#gjk-minkowski">http://www.dyn4j.org/2010/04/gjk-gilbert-johnson-keerthi/#gjk-minkowski</ulink> <ulink url="http://vec3.ca/gjk/implementation/">http://vec3.ca/gjk/implementation/</ulink> <ulink url="http://in2gpu.com/2014/05/18/gjk-algorithm-3d/">http://in2gpu.com/2014/05/18/gjk-algorithm-3d/</ulink></para>
</sect1>
<sect1 id="md__c_1__users_mohamed__desktop__m_t_r_x_engine__r_e_a_d_m_e_1autotoc_md6">
<title>Segment-Segment minimum distance implementation:</title>
<para><ulink url="http://geomalgorithms.com/a07-_distance.html#dist3D_Segment_to_Segment">http://geomalgorithms.com/a07-_distance.html#dist3D_Segment_to_Segment</ulink></para>
</sect1>
<sect1 id="md__c_1__users_mohamed__desktop__m_t_r_x_engine__r_e_a_d_m_e_1autotoc_md7">
<title>TRELLO</title>
<para><ulink url="https://trello.com/b/Cwb55iBt/mtrx-engine">https://trello.com/b/Cwb55iBt/mtrx-engine</ulink> </para>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
