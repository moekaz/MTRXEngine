<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_particle_collision_8h" kind="file" language="C++">
    <compoundname>ParticleCollision.h</compoundname>
    <innerclass refid="classmtrx_1_1_particle_collision" prot="public">mtrx::ParticleCollision</innerclass>
    <innernamespace refid="namespacemtrx">mtrx</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>Author:<sp/>Mohamed<sp/>Kazma</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Description:<sp/>Collision<sp/>contact<sp/>handling<sp/>between<sp/>2<sp/>particles<sp/>(collision<sp/>event)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>impulse<sp/>forces<sp/>caused<sp/>by<sp/>collision<sp/>modify<sp/>the<sp/>velocity<sp/>value<sp/>and<sp/>not<sp/>the<sp/>acceleration<sp/>as<sp/>they<sp/>are<sp/>not<sp/>forces<sp/>per<sp/>se</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;entities/Particle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemtrx" kindref="compound">mtrx</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ParticleCollision</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Particle*<sp/>particles[2];<sp/></highlight><highlight class="comment">//<sp/>The<sp/>2<sp/>particles<sp/>that<sp/>are<sp/>colliding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>restitution;<sp/></highlight><highlight class="comment">//<sp/>Restitution<sp/>constance<sp/>that<sp/>allows<sp/>us<sp/>to<sp/>know<sp/>the<sp/>ratio<sp/>of<sp/>how<sp/>much<sp/>separating<sp/>velocity<sp/>we<sp/>will<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>penetration;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>depth<sp/>of<sp/>penetration<sp/>between<sp/>the<sp/>2<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>collisionNormal;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>normal<sp/>of<sp/>the<sp/>collision<sp/>used<sp/>to<sp/>calculate<sp/>the<sp/>separating<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParticleCollision(Particle*<sp/>particle1,<sp/>Particle*<sp/>particle2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>restitution,<sp/>glm::vec3&amp;<sp/>normal);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~ParticleCollision();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Resolve();<sp/></highlight><highlight class="comment">//<sp/>Allows<sp/>us<sp/>to<sp/>resolve<sp/>a<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CalculateSeparatingVelocity()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>separating<sp/>velocity<sp/>between<sp/>2<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCollisionNormal(glm::vec3&amp;<sp/>normal)<sp/>{<sp/>collisionNormal<sp/>=<sp/>normal;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Mostly<sp/>used<sp/>for<sp/>collision<sp/>between<sp/>particle<sp/>and<sp/>static<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResolveVelocity();<sp/></highlight><highlight class="comment">//<sp/>Modify<sp/>velocity<sp/>according<sp/>to<sp/>separating<sp/>velocity,<sp/>restitution<sp/>etc...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResolveInterpenetration();<sp/></highlight><highlight class="comment">//<sp/>Resolves<sp/>collision<sp/>penetration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/ParticleCollision.h"/>
  </compounddef>
</doxygen>
