<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="classmtrx_1_1_b_v_h_node" kind="class" language="C++" prot="public">
    <compoundname>mtrx::BVHNode</compoundname>
    <includes refid="_b_v_h_node_8h" local="no">BVHNode.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>BoundingVolume</declname>
        <defname>BoundingVolume</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmtrx_1_1_b_v_h_node_1a1e5da85a3c68456536ba0d1bbdd03240" prot="public" static="no" mutable="no">
        <type><ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref>&lt; BoundingVolume &gt; *</type>
        <definition>BVHNode&lt;BoundingVolume&gt;* mtrx::BVHNode&lt; BoundingVolume &gt;::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="26" column="9" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_b_v_h_node_1aae66056fac0a6e9fc1117fb9dcf13a37" prot="public" static="no" mutable="no">
        <type><ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref>&lt; BoundingVolume &gt; *</type>
        <definition>BVHNode&lt;BoundingVolume&gt;* mtrx::BVHNode&lt; BoundingVolume &gt;::children[2]</definition>
        <argsstring>[2]</argsstring>
        <name>children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="27" column="9" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_b_v_h_node_1a48d13adcc887b9d6cf9b53e71a5ac17c" prot="public" static="no" mutable="no">
        <type>BoundingVolume</type>
        <definition>BoundingVolume mtrx::BVHNode&lt; BoundingVolume &gt;::volume</definition>
        <argsstring></argsstring>
        <name>volume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="28" column="16" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmtrx_1_1_b_v_h_node_1a103f6e89fadbd2fff814b72d7b9f6186" prot="public" static="no" mutable="no">
        <type><ref refid="classmtrx_1_1_body" kindref="compound">Body</ref> *</type>
        <definition>Body* mtrx::BVHNode&lt; BoundingVolume &gt;::body</definition>
        <argsstring></argsstring>
        <name>body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="29" column="6" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmtrx_1_1_b_v_h_node_1ad3e9ed341472167207c019d44f9f52b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtrx::BVHNode&lt; BoundingVolume &gt;::BVHNode</definition>
        <argsstring>()</argsstring>
        <name>BVHNode</name>
        <briefdescription>
<para>Construct a new <ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_b_v_h_node_1a78280fc6963d765bea61c8168aefcef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtrx::BVHNode&lt; BoundingVolume &gt;::BVHNode</definition>
        <argsstring>(BVHNode&lt; BoundingVolume &gt; *parent, BoundingVolume &amp;volume, Body *body=nullptr)</argsstring>
        <name>BVHNode</name>
        <param>
          <type><ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref>&lt; BoundingVolume &gt; *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>BoundingVolume &amp;</type>
          <declname>volume</declname>
        </param>
        <param>
          <type><ref refid="classmtrx_1_1_body" kindref="compound">Body</ref> *</type>
          <declname>body</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent of this node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>The bounding volume/collider used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The body that the <ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref> represents </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classmtrx_1_1_body" kindref="compound">mtrx::Body</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_b_v_h_node_1a0e13a063022682d02e158c14237cd005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mtrx::BVHNode&lt; BoundingVolume &gt;::~BVHNode</definition>
        <argsstring>()</argsstring>
        <name>~BVHNode</name>
        <briefdescription>
<para>Destroy the <ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_b_v_h_node_1a7cfbe8e7e5a37e42322fd6e88dd94af7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::BVHNode&lt; BoundingVolume &gt;::IsLeaf</definition>
        <argsstring>()</argsstring>
        <name>IsLeaf</name>
        <briefdescription>
<para>Check whether this node is a leaf. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true This node is a leaf </para>
</simplesect>
<simplesect kind="return"><para>false This node is not a leaf and has at least one child </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="58" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_b_v_h_node_1a378321dfc68909846c42554f6136bd99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::BVHNode&lt; BoundingVolume &gt;::IsCollision</definition>
        <argsstring>(BVHNode&lt; BoundingVolume &gt; &amp;other)</argsstring>
        <name>IsCollision</name>
        <param>
          <type><ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref>&lt; BoundingVolume &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check whether 2 nodes collide by checking that the bounding volumes collide. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref> that we want to check collision with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The 2 nodes collide </para>
</simplesect>
<simplesect kind="return"><para>false The 2 nodes do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="67" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_b_v_h_node_1af7a9afc9700be22acaf4ebb633ed3be5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::BVHNode&lt; BoundingVolume &gt;::DescendA</definition>
        <argsstring>(BVHNode&lt; BoundingVolume &gt; &amp;a, BVHNode&lt; BoundingVolume &gt; &amp;b)</argsstring>
        <name>DescendA</name>
        <param>
          <type><ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref>&lt; BoundingVolume &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classmtrx_1_1_b_v_h_node" kindref="compound">BVHNode</ref>&lt; BoundingVolume &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Utility function that allows that helps with figuring out which direction in the structure we want to go down when trying to find potential contacts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="78" column="13" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_b_v_h_node_1aa0a6d380d24568116bde3b573bdc5a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::BVHNode&lt; BoundingVolume &gt;::GetPotentialContacts</definition>
        <argsstring>(std::list&lt; PotentialCollision &gt; &amp;potentialCollisions)</argsstring>
        <name>GetPotentialContacts</name>
        <param>
          <type>std::list&lt; <ref refid="structmtrx_1_1_potential_collision" kindref="compound">PotentialCollision</ref> &gt; &amp;</type>
          <declname>potentialCollisions</declname>
        </param>
        <briefdescription>
<para>Get the Potential Contacts that could occur from the hierarchy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>potentialCollisions</parametername>
</parameternamelist>
<parameterdescription>
<para>Structure to store the potential collsions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="structmtrx_1_1_potential_collision" kindref="compound">mtrx::PotentialCollision</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="85" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_b_v_h_node_1a32e8ee4ec9e39976e3b53a25da45e629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::BVHNode&lt; BoundingVolume &gt;::Insert</definition>
        <argsstring>(Body *body, Collider &amp;collider)</argsstring>
        <name>Insert</name>
        <param>
          <type><ref refid="classmtrx_1_1_body" kindref="compound">Body</ref> *</type>
          <declname>body</declname>
        </param>
        <param>
          <type><ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> &amp;</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
<para>Insert collider as a leaf of the stucture. We attempt to add it in a position in the tree where we would get the least amount of growth. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>The body that we want to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collider</parametername>
</parameternamelist>
<parameterdescription>
<para>The bounding volume that we want to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="94" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmtrx_1_1_b_v_h_node_1ac052b562541a10478199340659459036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mtrx::BVHNode&lt; BoundingVolume &gt;::RecalculateBoundingVolume</definition>
        <argsstring>()</argsstring>
        <name>RecalculateBoundingVolume</name>
        <briefdescription>
<para>Recalculate the bounding volumes after the structure has been modified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="100" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An implementation of a BVH node used for Bounding Volume Hierarchies. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>BoundingVolume</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of bounding volume that will be used within the hierarchy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>mtrx::Body</label>
        <link refid="classmtrx_1_1_body"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>transform</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>mtrx::Transform</label>
        <link refid="classmtrx_1_1_transform"/>
      </node>
      <node id="3">
        <label>mtrx::IIntegratable</label>
        <link refid="classmtrx_1_1_i_integratable"/>
      </node>
      <node id="1">
        <label>mtrx::BVHNode&lt; BoundingVolume &gt;</label>
        <link refid="classmtrx_1_1_b_v_h_node"/>
        <childnode refid="2" relation="usage">
          <edgelabel>body</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" line="24" column="1" bodyfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/colliders/BVHNode.h" bodystart="23" bodyend="101"/>
    <listofallmembers>
      <member refid="classmtrx_1_1_b_v_h_node_1a103f6e89fadbd2fff814b72d7b9f6186" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>body</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1ad3e9ed341472167207c019d44f9f52b4" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>BVHNode</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1a78280fc6963d765bea61c8168aefcef3" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>BVHNode</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1aae66056fac0a6e9fc1117fb9dcf13a37" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>children</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1af7a9afc9700be22acaf4ebb633ed3be5" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>DescendA</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1aa0a6d380d24568116bde3b573bdc5a66" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>GetPotentialContacts</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1a32e8ee4ec9e39976e3b53a25da45e629" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>Insert</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1a378321dfc68909846c42554f6136bd99" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>IsCollision</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1a7cfbe8e7e5a37e42322fd6e88dd94af7" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>IsLeaf</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1a1e5da85a3c68456536ba0d1bbdd03240" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>parent</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1ac052b562541a10478199340659459036" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>RecalculateBoundingVolume</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1a48d13adcc887b9d6cf9b53e71a5ac17c" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>volume</name></member>
      <member refid="classmtrx_1_1_b_v_h_node_1a0e13a063022682d02e158c14237cd005" prot="public" virt="non-virtual"><scope>mtrx::BVHNode</scope><name>~BVHNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
