<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="namespacemtrx_1_1_collider_detection_util" kind="namespace" language="C++">
    <compoundname>mtrx::ColliderDetectionUtil</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemtrx_1_1_collider_detection_util_1ac77fc578372668ca2d94530f7e5f14a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::ColliderDetectionUtil::Collide</definition>
        <argsstring>(const Collider &amp;collider1, const Collider &amp;collider2)</argsstring>
        <name>Collide</name>
        <param>
          <type>const <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> &amp;</type>
          <declname>collider1</declname>
        </param>
        <param>
          <type>const <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> &amp;</type>
          <declname>collider2</declname>
        </param>
        <briefdescription>
<para>Check for whether 2 colliders collide. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>collider1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collider2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The 2 colliders collide </para>
</simplesect>
<simplesect kind="return"><para>false the 2 colliders do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" line="27" column="6" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" declline="27" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtrx_1_1_collider_detection_util_1a83f4a41260f33cb092a25f754cc3f978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::ColliderDetectionUtil::SphereCollisionOptions</definition>
        <argsstring>(const SphereCollider &amp;sphCollider, const Collider &amp;collider)</argsstring>
        <name>SphereCollisionOptions</name>
        <param>
          <type>const <ref refid="classmtrx_1_1_sphere_collider" kindref="compound">SphereCollider</ref> &amp;</type>
          <declname>sphCollider</declname>
        </param>
        <param>
          <type>const <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> &amp;</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
<para>Collision algorithm options for sphere colliders. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classmtrx_1_1_sphere_collider" kindref="compound">mtrx::SphereCollider</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sphCollider</parametername>
</parameternamelist>
<parameterdescription>
<para>The sphere collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collider</parametername>
</parameternamelist>
<parameterdescription>
<para>The other collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The 2 colliders collide </para>
</simplesect>
<simplesect kind="return"><para>false The 2 colliders do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" line="37" column="6" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" declline="37" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtrx_1_1_collider_detection_util_1a0d03f406930dcf4a27c960a313e18443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::ColliderDetectionUtil::AABBCollisionOptions</definition>
        <argsstring>(const AABBCollider &amp;aabb, const Collider &amp;collider)</argsstring>
        <name>AABBCollisionOptions</name>
        <param>
          <type>const <ref refid="classmtrx_1_1_a_a_b_b_collider" kindref="compound">AABBCollider</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <param>
          <type>const <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> &amp;</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
<para>Collision algorithm options for AABB colliders. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classmtrx_1_1_a_a_b_b_collider" kindref="compound">mtrx::AABBCollider</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aabb</parametername>
</parameternamelist>
<parameterdescription>
<para>The aabb collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collider</parametername>
</parameternamelist>
<parameterdescription>
<para>The other collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The 2 colliders collide </para>
</simplesect>
<simplesect kind="return"><para>false The 2 colliders do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" line="47" column="6" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" declline="47" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtrx_1_1_collider_detection_util_1afe2bd5be5b56798365e58ce26b61ac19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::ColliderDetectionUtil::OOBBCollisionOptions</definition>
        <argsstring>(const OOBBCollider &amp;oobb, const Collider &amp;collider)</argsstring>
        <name>OOBBCollisionOptions</name>
        <param>
          <type>const <ref refid="classmtrx_1_1_o_o_b_b_collider" kindref="compound">OOBBCollider</ref> &amp;</type>
          <declname>oobb</declname>
        </param>
        <param>
          <type>const <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> &amp;</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
<para>Collision algorithm options for OOBB colliders. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classmtrx_1_1_o_o_b_b_collider" kindref="compound">mtrx::OOBBCollider</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oobb</parametername>
</parameternamelist>
<parameterdescription>
<para>The OOBB collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collider</parametername>
</parameternamelist>
<parameterdescription>
<para>The other collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The 2 colliders collide </para>
</simplesect>
<simplesect kind="return"><para>false The 2 colliders do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" line="57" column="6" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtrx_1_1_collider_detection_util_1a767bbb02f31fba82dc433def365c33b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::ColliderDetectionUtil::CapsuleCollisionOptions</definition>
        <argsstring>(const CapsuleCollider &amp;capCollider, const Collider &amp;collider)</argsstring>
        <name>CapsuleCollisionOptions</name>
        <param>
          <type>const <ref refid="classmtrx_1_1_capsule_collider" kindref="compound">CapsuleCollider</ref> &amp;</type>
          <declname>capCollider</declname>
        </param>
        <param>
          <type>const <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> &amp;</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
<para>Collision algorithm options for capsule colliders @mtrx::CapsuleCollider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capCollider</parametername>
</parameternamelist>
<parameterdescription>
<para>The capsule collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collider</parametername>
</parameternamelist>
<parameterdescription>
<para>The other collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The 2 colliders collide </para>
</simplesect>
<simplesect kind="return"><para>false The 2 colliders do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" line="67" column="6" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" declline="67" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacemtrx_1_1_collider_detection_util_1a08d951ddbcee8094a314edface8d4881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mtrx::ColliderDetectionUtil::ConvexShapeCollisionOptions</definition>
        <argsstring>(const ConvexShapeCollider &amp;convexCollider, const Collider &amp;collider)</argsstring>
        <name>ConvexShapeCollisionOptions</name>
        <param>
          <type>const <ref refid="classmtrx_1_1_convex_shape_collider" kindref="compound">ConvexShapeCollider</ref> &amp;</type>
          <declname>convexCollider</declname>
        </param>
        <param>
          <type>const <ref refid="classmtrx_1_1_collider" kindref="compound">Collider</ref> &amp;</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
<para>Collision algotithm options for convex shape colliders. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classmtrx_1_1_convex_shape_collider" kindref="compound">mtrx::ConvexShapeCollider</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>convexCollider</parametername>
</parameternamelist>
<parameterdescription>
<para>The convex shape collider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collider</parametername>
</parameternamelist>
<parameterdescription>
<para>The other collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true The 2 colliders collide </para>
</simplesect>
<simplesect kind="return"><para>false The 2 colliders do not collide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" line="77" column="6" declfile="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" declline="77" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility namespace used for resolving collision detection algorithms to be used based on collider types. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="namespacemtrx_1aba70c7f807f8a862fb9a10445ec82e7c" kindref="member">mtrx::ColliderType</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="C:/Users/mohamed/Desktop/MTRXEngine/MTRXEngine/MTRXEngine/source/headers/utils/ColliderDetectionUtil.h" line="18" column="1"/>
  </compounddef>
</doxygen>
